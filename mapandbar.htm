<!-- 地图页面上实现数据排序，并添加柱状图辅助显示，更改飞机图标成小点-->



<!DOCTYPE html>
<html style="height: 100%">

<head>
  <meta charset="utf-8"> </head>

<body style="height: 100%; margin: 0">
  <div id="container" style="height: 100%"></div>
  <script type="text/javascript" src="js/echarts.min.js"></script>
  <script type="text/javascript" src="js/china.js"></script>
  <!--<script type="text/javascript" src="js/geoCoordMap.js"></script>
    <script type="text/javascript" src="js/data.js"></script>-->
  <script type="text/javascript">
    var geoCoordMap = {
      '上海': [121.4648, 31.2891]
      , '东莞': [113.8953, 22.901]
      , '东营': [118.7073, 37.5513]
      , '中山': [113.4229, 22.478]
      , '临汾': [111.4783, 36.1615]
      , '临沂': [118.3118, 35.2936]
      , '丹东': [124.541, 40.4242]
      , '丽水': [119.5642, 28.1854]
      , '乌鲁木齐': [87.9236, 43.5883]
      , '佛山': [112.8955, 23.1097]
      , '保定': [115.0488, 39.0948]
      , '兰州': [103.5901, 36.3043]
      , '包头': [110.3467, 41.4899]
      , '北京': [116.4551, 40.2539]
      , '北海': [109.314, 21.6211]
      , '南京': [118.8062, 31.9208]
      , '南宁': [108.479, 23.1152]
      , '南昌': [116.0046, 28.6633]
      , '南通': [121.1023, 32.1625]
      , '厦门': [118.1689, 24.6478]
      , '台州': [121.1353, 28.6688]
      , '合肥': [117.29, 32.0581]
      , '呼和浩特': [111.4124, 40.4901]
      , '咸阳': [108.4131, 34.8706]
      , '哈尔滨': [127.9688, 45.368]
      , '唐山': [118.4766, 39.6826]
      , '嘉兴': [120.9155, 30.6354]
      , '大同': [113.7854, 39.8035]
      , '大连': [122.2229, 39.4409]
      , '天津': [117.4219, 39.4189]
      , '太原': [112.3352, 37.9413]
      , '威海': [121.9482, 37.1393]
      , '宁波': [121.5967, 29.6466]
      , '宝鸡': [107.1826, 34.3433]
      , '宿迁': [118.5535, 33.7775]
      , '常州': [119.4543, 31.5582]
      , '广州': [113.5107, 23.2196]
      , '廊坊': [116.521, 39.0509]
      , '延安': [109.1052, 36.4252]
      , '张家口': [115.1477, 40.8527]
      , '徐州': [117.5208, 34.3268]
      , '德州': [116.6858, 37.2107]
      , '惠州': [114.6204, 23.1647]
      , '成都': [103.9526, 30.7617]
      , '扬州': [119.4653, 32.8162]
      , '承德': [117.5757, 41.4075]
      , '拉萨': [91.1865, 30.1465]
      , '无锡': [120.3442, 31.5527]
      , '日照': [119.2786, 35.5023]
      , '昆明': [102.9199, 25.4663]
      , '杭州': [119.5313, 29.8773]
      , '枣庄': [117.323, 34.8926]
      , '柳州': [109.3799, 24.9774]
      , '株洲': [113.5327, 27.0319]
      , '武汉': [114.3896, 30.6628]
      , '汕头': [117.1692, 23.3405]
      , '江门': [112.6318, 22.1484]
      , '沈阳': [123.1238, 42.1216]
      , '沧州': [116.8286, 38.2104]
      , '河源': [114.917, 23.9722]
      , '泉州': [118.3228, 25.1147]
      , '泰安': [117.0264, 36.0516]
      , '泰州': [120.0586, 32.5525]
      , '济南': [117.1582, 36.8701]
      , '济宁': [116.8286, 35.3375]
      , '海口': [110.3893, 19.8516]
      , '淄博': [118.0371, 36.6064]
      , '淮安': [118.927, 33.4039]
      , '深圳': [114.5435, 22.5439]
      , '清远': [112.9175, 24.3292]
      , '温州': [120.498, 27.8119]
      , '渭南': [109.7864, 35.0299]
      , '湖州': [119.8608, 30.7782]
      , '湘潭': [112.5439, 27.7075]
      , '滨州': [117.8174, 37.4963]
      , '潍坊': [119.0918, 36.524]
      , '烟台': [120.7397, 37.5128]
      , '玉溪': [101.9312, 23.8898]
      , '珠海': [113.7305, 22.1155]
      , '盐城': [120.2234, 33.5577]
      , '盘锦': [121.9482, 41.0449]
      , '石家庄': [114.4995, 38.1006]
      , '福州': [119.4543, 25.9222]
      , '秦皇岛': [119.2126, 40.0232]
      , '绍兴': [120.564, 29.7565]
      , '聊城': [115.9167, 36.4032]
      , '肇庆': [112.1265, 23.5822]
      , '舟山': [122.2559, 30.2234]
      , '苏州': [120.6519, 31.3989]
      , '莱芜': [117.6526, 36.2714]
      , '菏泽': [115.6201, 35.2057]
      , '营口': [122.4316, 40.4297]
      , '葫芦岛': [120.1575, 40.578]
      , '衡水': [115.8838, 37.7161]
      , '衢州': [118.6853, 28.8666]
      , '西宁': [101.4038, 36.8207]
      , '西安': [109.1162, 34.2004]
      , '贵阳': [106.6992, 26.7682]
      , '连云港': [119.1248, 34.552]
      , '邢台': [114.8071, 37.2821]
      , '邯郸': [114.4775, 36.535]
      , '郑州': [113.4668, 34.6234]
      , '鄂尔多斯': [108.9734, 39.2487]
      , '重庆': [107.7539, 30.1904]
      , '金华': [120.0037, 29.1028]
      , '铜川': [109.0393, 35.1947]
      , '银川': [106.3586, 38.1775]
      , '镇江': [119.4763, 31.9702]
      , '长春': [125.8154, 44.2584]
      , '长沙': [113.0823, 28.2568]
      , '长治': [112.8625, 36.4746]
      , '阳泉': [113.4778, 38.0951]
      , '青岛': [120.4651, 36.3373]
      , '韶关': [113.7964, 24.7028]
    };
    var dataMap = new Map([['北京', [{
          name: '上海'
          , value: 95
            }
    
        , {
          name: '广州'
          , value: 90
            }
    
        , {
          name: '大连'
          , value: 80
            }
    
        , {
          name: '南宁'
          , value: 70
            }
    
        , {
          name: '南昌'
          , value: 60
            }
    
        , {
          name: '拉萨'
          , value: 50
            }, {
          name: '长春'
          , value: 40
            }, {
          name: '包头'
          , value: 30
            }, {
          name: '重庆'
          , value: 20
            }, {
          name: '常州'
          , value: 10
            }]]
                    
      , ['上海', [{
        name: '包头'
        , value: 94
            }, {
        name: '昆明'
        , value: 91
            }, {
        name: '广州'
        , value: 81
            }, {
        name: '郑州'
        , value: 71
            }, {
        name: '长春'
        , value: 61
            }, {
        name: '重庆'
        , value: 51
            }, {
        name: '长沙'
        , value: 40
            }, {
        name: '北京'
        , value: 30
            }, {
        name: '丹东'
        , value: 20
            }, {
        name: '大连'
        , value: 10
            }]]
                    
      , ['广州', [{
        name: '福州'
        , value: 96
            }, {
        name: '太原'
        , value: 92
            }, {
        name: '长春'
        , value: 82
            }, {
        name: '重庆'
        , value: 72
            }, {
        name: '西安'
        , value: 62
            }, {
        name: '成都'
        , value: 50
            }, {
        name: '常州'
        , value: 40
            }, {
        name: '北京'
        , value: 30
            }, {
        name: '北海'
        , value: 20
            }, {
        name: '海口'
        , value: 10
            }, {
        name: '郑州'
        , value: 85
            }]]]);

    function getSeclectData(list) {
      return list.map(function (x) {
        return [x, dataMap.get(x)];
      });
    }
    var dom = document.getElementById("container");
    var myChart = echarts.init(dom);
    var app = {};
    option = null;
    var convertData = function (data) {
      var res = [];
      for (var i = 0; i < data.length; i++) {
        var geoCoord = geoCoordMap[data[i].name];
        if (geoCoord) {
          res.push({
            name: data[i].name
            , value: geoCoord.concat(data[i].value)
          });
        }
      }
      return res;
    };
    var convertDataBar = function (data) {
      var a = data.sort(function (a, b) {
        return a.value - b.value;
      });
      var res = [[], []];
      for (var i = data.length - 1; i >= 0; i--) {
        var geoCoord = geoCoordMap[data[i].name];
        if (geoCoord) {
          res[0].push(data[i].name);
          res[1].push(data[i].value);
        }
      }
      return res;
    }
    var convertDataLine = function (data1, data2) {
      var res = [];
      for (var i = 0; i < data2.length; i++) {
        var toCoord = geoCoordMap[data2[i].name];
        var fromCoord = geoCoordMap[data1];
        if (fromCoord && toCoord) {
          res.push([{
            coord: fromCoord
            }, {
            coord: toCoord
            }]);
        }
      }
      return res;
    };
    var list = ['北京', '上海', '广州'];
    var color = ['#a6c84c'

      , '#ffa022', '#d3d30c', '#46bee9', '#5e71ff', '#07af58', '#a6c84c', '#ffa022', '#d3d30c', '#46bee9', '#5e71ff'

      , '#ffa022', '#d3d30c', '#46bee9', '#5e71ff', '#07af58', '#a6c84c', '#ffa022', '#d3d30c', '#46bee9', '#5e71ff'];
    var series = [];
    var tooltipFormatterNumber1 = {
      0: '0'
      , 3: '3'
      , 4: '4'
      , 7: '7'
      , 8: '8'
      , 11: '11'
    };
    var tooltipFormatterNumber2 = {
      1: '1'
      , 2: '2'
      , 5: '5'
      , 6: '6'
      , 9: '9'
      , 10: '10'
    };
    var option = {
      backgroundColor: '#404a59'
      , title: {
        text: '就医人群地区分布'
        , subtext: '根据患者手机号获取地区'
        , left: 'center'
        , textStyle: {
          color: '#fff'
        }
      }
      , tooltip: {
        trigger: 'item'
        , formatter: function (params, ticket, callback) {
          //                    if (params.seriesIndex == 0) {
          //                        return;
          //                    } //skip line series
          if (params.seriesIndex in tooltipFormatterNumber1) {
            //console.log(params.seriesIndex);
            //return;
            var res = params.name + '<br/>';
            var value = String(params.data);
            res += '排名: ' + (params.dataIndex + 1);
            res += '\t人数: ' + value;
          } else {
            var res = params.name + '<br/>';
            var value = String(params.data.value);
            res += '排名: ' + (params.dataIndex + 1);
            res += '\t人数: ' + value.split(',')[2];
          }
          //debugger;
          //                    if (params.seriesIndex == 3) {
          //                        res += '(' + params.percent + '%)';
          //                    } //add percent in pie chart
          setTimeout(function () {
            callback(ticket, res);
          }, 10);
          return 'loading';
        }
      }
      , legend: {
        orient: 'vertical'
        , top: 'bottom'
        , left: 'right'
        , data: list
        , textStyle: {
          color: '#fff'
        }
        , selectedMode: 'single'
      , }
      , geo: {
        map: 'china'
        , label: {
          emphasis: {
            show: false
          }
        }
        , roam: true
        , itemStyle: {
          normal: {
            areaColor: '#323c48'
            , borderColor: '#404a59'
          }
          , emphasis: {
            areaColor: '#2a333d'
          }
        }
      }
      , grid: {
        left: 40
        , top: 500
        , bottom: 20
        , width: '20%'
      }
      , xAxis: {
        type: 'value'
        , scale: true
        , position: 'top'
        , boundaryGap: false
        , splitLine: {
          show: false
        }
        , axisLine: {
          show: false
        }
        , axisTick: {
          show: false
        }
        , axisLabel: {
          margin: 2
          , textStyle: {
            color: '#aaa'
          }
        }
      , }
      , yAxis: {
        type: 'category'
        , inverse: false
        , name: '北京'
        , nameGap: 16
        , axisLine: {
          show: false
          , lineStyle: {
            color: '#ddd'
          }
        }
        , axisTick: {
          show: false
          , lineStyle: {
            color: '#ddd'
          }
        }
        , axisLabel: {
          interval: 0
          , textStyle: {
            color: '#ddd'
          }
        }
        , data: convertDataBar(getSeclectData(['北京'])[0][1])[0]
      } //'上海','广州','大连','南宁','南昌','拉萨','长春','包头','重庆','常州'
      // data: convertDataBar(getSeclectData(['北京'])[0][1])[0]

      
      , series: series
    };
    var data = getSeclectData(list);
    data.forEach(function (item, i) {
      //option.yAxis.data = [];
      //console.log(convertDataBar(item[1])[0]);
      //console.log(convertDataBar(item[1])[1]);
      //option.yAxis.data = (convertDataBar(item[1])[0]);
      //option.yAxis.name = item[0];
      series.push({
        name: item[0]
        , type: 'lines'
        , zlevel: 2
        , effect: {
          show: true
          , period: 6
          , trailLength: 0
        }
        , lineStyle: {
          normal: {
            color: color[i]
            , width: 1
            , opacity: 0.4
            , curveness: 0.2
          }
        }
        , data: convertDataLine(item[0], item[1])
      }, {
        name: item[0]
        , type: 'effectScatter'
        , coordinateSystem: 'geo'
        , zlevel: 2
        , rippleEffect: {
          brushType: 'stroke'
        }
        , label: {
          emphasis: {
            show: false
          }
        }
        , symbolSize: function (val) {
          return Math.max(Math.log(val[2]) / Math.log(3), 1);
        }
        , itemStyle: {
          normal: {
            color: color[i]
            , opacity: 0.5
          }
          , emphasis: {
            opacity: 1
          }
        }
        , data: convertData(item[1])
      }, {
        name: item[0]
        , type: 'scatter'
        , coordinateSystem: 'geo'
        , zlevel: 5
        , label: {
          normal: {
            show: true
            , position: 'right'
            , formatter: function (params) {
              var idx = params.dataIndex + 1;
              var name = params.data.name
              return '[' + idx + ']' + name;
            }
          }
        }
        , symbolSize: 1
        , itemStyle: {
          normal: {
            color: '#fff'
            , opacity: 0.8
          }
        }
        , data: convertData(item[1].sort(function (a, b) {
            return b.value - a.value;
          }))
          /*data: convertData(item[1].sort(function (a, b) {
                  return b.value - a.value;
              }).slice(0, 4))*/
      }, {
        name: item[0]
        , zlevel: 7
        , type: 'bar', //symbol:'none'
        data: convertDataBar(item[1])[1]
        , label: {
          normal: {
            show: true
            , color: '#fff'
          }
        }
        , itemStyle: {
          normal: {
            color: color[i]
          }
        }
      });
    });
    if (option && typeof option === "object") {
      var startTime = +new Date();
      myChart.setOption(option, false);
      var endTime = +new Date();
      var updateTime = endTime - startTime;
      console.log("Time used:", updateTime);
      // 图例开关的行为只会触发 legendselectchanged 事件
      myChart.on('legendselectchanged', function (params) {
        // 获取点击图例的选中状态
        // var isSelected = params.selected[params.name];
        // 在控制台中打印
        // console.log((isSelected ? '选中了' : '取消选中了') + '图例' + params.name);
        // 打印所有图例的状态
        // console.log(params.selected);
        switch (params.name) {
        case '北京':
          myChart.setOption({
            yAxis: {
              data: convertDataBar(getSeclectData(['北京'])[0][1])[0]
              , name: params.name
            }
          });
          break;
        case '上海':
          myChart.setOption({
            yAxis: {
              data: convertDataBar(getSeclectData(['上海'])[0][1])[0]
              , name: params.name
            }
          });
          break;
        case '广州':
          myChart.setOption({
            yAxis: {
              data: convertDataBar(getSeclectData(['广州'])[0][1])[0]
              , name: params.name
            }
          });
          break;
        }
      });
    }
  </script>
</body>

</html>